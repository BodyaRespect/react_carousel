{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentImage","setCurrentImage","maxImages","length","isDisabledPrev","isDisabledNext","className","style","width","transition","map","image","index","transform","src","alt","type","onClick","prev","Math","max","disabled","min","options","App","setStep","setFrameSize","setItemWidth","setAnimationDuration","setInfinite","getMaxFrames","floor","htmlFor","id","value","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2355fd70.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImage, setCurrentImage] = useState(0);\n\n  const maxImages = images.length - frameSize;\n\n  const handlePrev = () => (\n    currentImage !== 0\n      ? setCurrentImage(prev => Math.max(prev - step, 0))\n      : setCurrentImage(maxImages)\n  );\n\n  const handleNext = () => (\n    currentImage !== maxImages\n      ? setCurrentImage(prev => Math.min(prev + step, maxImages))\n      : setCurrentImage(0)\n  );\n\n  const isDisabledPrev = currentImage === 0 && !infinite;\n  const isDisabledNext = currentImage === maxImages && !infinite;\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n        transition: `${animationDuration}ms`,\n      }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => (\n          <li\n            className=\"Carousel__image\"\n            key={image}\n            style={{\n              transform: `translateX(${-(currentImage * itemWidth)}px)`,\n              transition: `transform ${animationDuration}ms ease 0s`,\n            }}\n          >\n            <img\n              src={image}\n              alt={`${index + 1}`}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"Carousel__btn\"\n          onClick={handlePrev}\n          disabled={isDisabledPrev}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          className=\"Carousel__btn\"\n          data-cy=\"next\"\n          onClick={handleNext}\n          disabled={isDisabledNext}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst options = {\n  step: 3,\n  frame: 3,\n  width: 130,\n  animation: 1000,\n  infinite: false,\n};\n\nconst MAX_CONTAINER_WIDTH = 1300;\n\nconst App: React.FC = () => {\n  const [step, setStep] = useState(options.step);\n  const [frameSize, setFrameSize] = useState(options.frame);\n  const [itemWidth, setItemWidth] = useState(options.width);\n  const [animationDuration, setAnimationDuration] = useState(options.animation);\n  const [infinite, setInfinite] = useState(options.infinite);\n\n  const getMaxFrames = Math.floor(MAX_CONTAINER_WIDTH / itemWidth);\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">Carousel</h1>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n\n      <div\n        className=\"labels-container\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <label htmlFor=\"itemId\" className=\"App__label\">\n          {'Item Width: '}\n          <input\n            type=\"number\"\n            id=\"itemId\"\n            value={itemWidth}\n            min={130}\n            max={260}\n            step={10}\n            onChange={(event) => setItemWidth(+event.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"frameId\" className=\"App__label\">\n          {'Frame Size: '}\n          <input\n            type=\"number\"\n            id=\"frameId\"\n            value={frameSize}\n            min={1}\n            max={getMaxFrames}\n            step={1}\n            onChange={(event) => setFrameSize(+event.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"stepId\" className=\"App__label\">\n          {'Step: '}\n          <input\n            type=\"number\"\n            id=\"stepId\"\n            value={step}\n            min={1}\n            max={5}\n            onChange={(event) => setStep(+event.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"animationDurationId\" className=\"App__label\">\n          {'Animation duration: '}\n          <input\n            type=\"number\"\n            id=\"animationDurationId\"\n            value={animationDuration}\n            min={500}\n            max={5000}\n            step={500}\n            onChange={(event) => setAnimationDuration(+event.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"infiniteId\" className=\"App__label\">\n          {'Infinite '}\n          <input\n            type=\"checkbox\"\n            id=\"infiniteId\"\n            onChange={() => setInfinite(!infinite)}\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}